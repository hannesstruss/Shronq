apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.triplet.play'

android {
  compileSdkVersion buildConfig.compileSdk

  defaultConfig {
    applicationId = "de.hannesstruss.shronq"
    minSdkVersion buildConfig.minSdk
    targetSdkVersion buildConfig.targetSdk
    versionCode = buildConfig.version.code
    versionName = buildConfig.version.name

    resValue "string", "bugsnag_key", getProperty('shronq.bugsnag_key')

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'hunter2'
      keyAlias 'key0'
      keyPassword 'hunter2'
    }

    if (file('upload.keystore').exists()) {
      upload {
        storeFile file('upload.keystore')
        storePassword getProperty('shronq.upload_store_password')
        keyAlias 'key0'
        keyPassword getProperty('shronq.upload_key_password')
      }
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix = ".dev"
      versionNameSuffix = "-dev"
      minifyEnabled false
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled false
      if (file('upload.keystore').exists()) {
        signingConfig signingConfigs.upload
      } else {
        signingConfig signingConfigs.debug
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    pickFirst "META-INF/atomicfu.kotlin_module"
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  kotlinOptions {
    freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
  }
}

play {
  serviceAccountCredentials = file('play-publisher-service-account.json')
  track = 'internal'
}

dependencies {
  implementation project(":MVI")

  implementation deps.kotlin.stdlib
  implementation deps.kotlin.coroutines.rx2
  implementation deps.kotlin.coroutines.playservices

  implementation deps.dagger.runtime
  kapt deps.dagger.compiler

  implementation deps.android.support.appCompat
  implementation deps.android.support.constraintLayout

  implementation deps.android.material.material

  implementation deps.android.arch.navigation.fragment
  implementation deps.android.arch.navigation.ui

  implementation deps.android.arch.lifecycle.extensions
  implementation deps.android.arch.lifecycle.viewmodel

  implementation deps.android.arch.room.runtime
  implementation deps.android.arch.room.ktx
  implementation deps.android.arch.room.rx2
  kapt deps.android.arch.room.compiler

  implementation deps.android.ktx.core
  implementation deps.android.ktx.sqlite

  implementation(deps.android.arch.work)

  implementation deps.playservices.fit
  implementation deps.playservices.auth

  implementation deps.gson

  implementation deps.rx.java
  implementation deps.rx.android

  implementation deps.rx.binding.main
  implementation deps.rx.binding.material
  implementation deps.rx.binding.appcompat

  implementation deps.timber
  implementation deps.bugsnag.sdk

  implementation deps.processphoenix

  implementation 'com.amazonaws:aws-android-sdk-s3:2.13.2'
}

